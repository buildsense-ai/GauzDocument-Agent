# 增强版PDF内容重组prompt
# 专门处理跨页面内容连接和段落优化

# 跨页面内容连接优化模板
cross_page_content_optimization: |
  # 任务
  优化PDF解析后的页面文本，处理跨页面内容割裂问题，确保语义连续性。

  # 输入文本
  {raw_text}

  # 上下文信息
  - 当前页码: {page_number}
  - 前一页最后100字符: {previous_page_ending}
  - 后一页开始100字符: {next_page_beginning}

  # 优化规则
  1. **跨页面连接处理**：
     - 识别被分割的句子、段落、列表项
     - 检测跨页面的标题、编号序列
     - 合并被页面边界分割的完整语义单元
     - 处理表格、图片标题的跨页面问题

  2. **段落边界优化**：
     - 识别真正的段落边界 vs 页面人工边界
     - 保持列表项的完整性
     - 处理编号序列的连续性
     - 修复被分割的引用、公式、代码块

  3. **语义连续性保障**：
     - 确保章节标题与内容的正确关联
     - 保持图表与其说明文字的关联
     - 处理"见图X"、"如表Y所示"等引用的连续性
     - 维护脚注、引用的完整性

  4. **格式标准化**：
     - 统一段落间距（使用双换行）
     - 标准化标题格式和层级
     - 清理多余的空白和换行符
     - 保持原文的逻辑结构

  5. **输出要求**：
     - 纯文本格式，无markdown标记
     - 保持原文完整性，不删除内容
     - 确保文本流畅可读
     - 明确标识图片和表格位置

  # 优化后的文本

# 智能段落分割模板
intelligent_paragraph_segmentation: |
  # 任务
  对清洗后的文本进行智能段落分割，为章节切割和最小块生成提供更好的基础。

  # 输入文本
  {cleaned_text}

  # 分割规则
  1. **语义段落识别**：
     - 识别完整的语义段落单元
     - 区分标题、正文、列表、引用
     - 保持图表描述的完整性
     - 识别编号序列的连续性

  2. **标题层级处理**：
     - 识别各级标题的格式特征
     - 处理编号标题（1.1、1.2等）
     - 保持标题与内容的关联
     - 标准化标题格式

  3. **列表和编号处理**：
     - 保持列表项的完整性
     - 处理多级编号列表
     - 识别表格行和列的结构
     - 保持步骤序列的连续性

  4. **图表处理**：
     - 识别图表标题和描述
     - 保持图表与说明文字的关联
     - 处理图表引用的连续性
     - 标准化图表描述格式

  5. **输出格式**：
     - 使用双换行分隔段落
     - 保持原文的逻辑结构
     - 标识重要的结构元素
     - 为后续处理提供清晰的文本边界

  # 分割后的文本

# 图片表格位置精确定位模板
media_positioning_template: |
  # 任务
  为图片和表格生成精确的位置标识符，便于后续章节关联和检索。

  # 输入信息
  - 媒体类型: {media_type}  # image 或 table
  - 媒体ID: {media_id}
  - 页面上下文: {page_context}
  - 前后文本: {surrounding_text}

  # 定位规则
  1. **上下文分析**：
     - 分析媒体前后的文本内容
     - 识别媒体的标题和描述
     - 确定媒体在段落中的位置
     - 分析媒体与章节的关联

  2. **位置标识符生成**：
     - 生成unique的位置标识符
     - 包含章节信息（如果可确定）
     - 包含页面位置信息
     - 生成检索友好的描述

  3. **输出格式**：
     - 位置标识符: {media_type}_{media_id}_{chapter_hint}_{page_number}
     - 插入位置: 在相关文本的适当位置
     - 描述信息: 简洁的媒体描述
     - 关联信息: 与章节和内容的关联

  # 位置标识符和描述 